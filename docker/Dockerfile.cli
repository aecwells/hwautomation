# Multi-stage Dockerfile for HWAutomation CLI
# Optimized for command-line tool deployment

FROM python:3.11-slim as base

# Install system dependencies for CLI tools
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    openssh-client \
    iputils-ping \
    net-tools \
    ipmitool \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r hwautomation && useradd -r -g hwautomation hwautomation

WORKDIR /app

# Copy requirements and package config
COPY requirements*.txt pyproject.toml ./

# Development stage with all dev tools
FROM base as development

RUN pip install --upgrade pip && \
    pip install -r requirements-all.txt && \
    pip install pytest pytest-cov pytest-mock pytest-xdist pytest-html black flake8 mypy

COPY . .
RUN pip install -e .[dev]

# Production stage with minimal dependencies
FROM base as production

RUN pip install --upgrade pip && \
    pip install -r requirements-all.txt

COPY . .
RUN pip install -e . && \
    chown -R hwautomation:hwautomation /app

USER hwautomation

# CLI stage optimized for command-line usage
FROM production as cli

# Set CLI-specific environment
ENV PYTHONPATH=/app/src
ENV HWAUTOMATION_MODE=cli

# CLI health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import hwautomation; print('CLI healthy')" || exit 1

# Default to CLI interface
ENTRYPOINT ["python", "-m", "hwautomation.cli"]
CMD ["--help"]
