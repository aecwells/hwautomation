[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hwautomation"
version = "1.0.0"
description = "Hardware automation tools for MAAS, IPMI, and RedFish management"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Hardware Automation Team", email = "admin@example.com"},
]
keywords = ["hardware", "automation", "maas", "ipmi", "redfish", "server", "management"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: System :: Systems Administration",
    "Topic :: System :: Hardware",
]

dependencies = [
    "requests>=2.25.0",
    "requests-oauthlib>=1.3.0",
    "PyYAML>=5.4.0",
    "paramiko>=2.7.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
]

[project.scripts]
hwautomation = "hwautomation.cli:main"
hw-gui = "hwautomation.web:main"
hw-web = "hwautomation.web:main"
hw-cli = "hwautomation.cli:main"
db-manager = "hwautomation.scripts.db_manager:main"
orchestrator = "scripts.orchestrator:main"

[project.urls]
Homepage = "https://github.com/yourorg/hwautomation"
Documentation = "https://github.com/yourorg/hwautomation/wiki"
Repository = "https://github.com/yourorg/hwautomation.git"
Issues = "https://github.com/yourorg/hwautomation/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
hwautomation = ["*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
