# Docker Compose override for local development
# This file is automatically included when present

# Docker Compose Override Configuration
# Development and testing environment customizations
# Note: version field is deprecated in Docker Compose v2+

services:
  app:
    # Use optimized web Dockerfile for GUI-first deployment
    build:
      context: .
      dockerfile: docker/Dockerfile.web
      target: development
    # Override for development - use webapp.py as optimized entry point
    command: ["python", "src/hwautomation/web/app.py"]
    environment:
      - DEBUG=1
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - HWAUTOMATION_MODE=web
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
    volumes:
      # Add additional development mounts
      - ./logs:/app/logs
      - ./data:/app/data
    # Keep container running for development
    tty: true
    stdin_open: true
    # Health check optimized for web app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  db:
    # Development database with exposed ports
    environment:
      - POSTGRES_DB=hwautomation_dev
    # Mount for database dumps/backups during development
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-backups:/backups

  # Additional development services
  adminer:
    image: adminer:latest
    container_name: ${PROJECT_NAME:-hwautomation}-adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    depends_on:
      - db
    networks:
      - hwautomation

  # Redis commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ${PROJECT_NAME:-hwautomation}-redis-ui
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - hwautomation
