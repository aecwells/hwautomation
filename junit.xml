<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="5" failures="0" skipped="0" tests="5" time="0.918" timestamp="2025-08-09T16:43:47.048052-07:00" hostname="ethereal"><testcase classname="" name="tests.integration.test_workflow" time="0.000"><error message="collection failure">tests/integration/test_workflow.py:7: in &lt;module&gt;
    from hwautomation.orchestration.workflow_manager import WorkflowManager
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/tests/integration/__pycache__/test_workflow.cpython-312.pyc'
        __doc__    = '\nIntegration tests for workflow management.\n'
        __file__   = '/home/cwells/projects/hwautomation/tests/integration/test_workflow.py'
        __loader__ = &lt;_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7fb27a52ab70&gt;
        __name__   = 'integration.test_workflow'
        __package__ = 'integration'
        __spec__   = ModuleSpec(name='integration.test_workflow', loader=&lt;_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7fb27a52ab70&gt;, origin='/home/cwells/projects/hwautomation/tests/integration/test_workflow.py')
        pytest     = &lt;module 'pytest' from '/home/cwells/projects/hwautomation/.venv/lib/python3.12/site-packages/pytest/__init__.py'&gt;
src/hwautomation/__init__.py:14: in &lt;module&gt;
    from .hardware.bios import BiosConfigManager
        DatabaseMigrator = &lt;class 'hwautomation.database.migrations.DatabaseMigrator'&gt;
        DbHelper   = &lt;class 'hwautomation.database.helper.DbHelper'&gt;
        __author__ = 'Hardware Automation Team'
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/__pycache__/__init__.cpython-312.pyc'
        __doc__    = '\nHardware Automation Package\n\nA Python package for automating server hardware management through MAAS API,\nIPMI, and RedFish interfaces.\n.'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/__init__.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb27967dbe0&gt;
        __name__   = 'hwautomation'
        __package__ = 'hwautomation'
        __path__   = ['/home/cwells/projects/hwautomation/src/hwautomation']
        __spec__   = ModuleSpec(name='hwautomation', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb27967dbe0&gt;, origin=...tion/src/hwautomation/__init__.py', submodule_search_locations=['/home/cwells/projects/hwautomation/src/hwautomation'])
        __version__ = '1.0.0'
        database   = &lt;module 'hwautomation.database' from '/home/cwells/projects/hwautomation/src/hwautomation/database/__init__.py'&gt;
        logging    = &lt;module 'hwautomation.logging' from '/home/cwells/projects/hwautomation/src/hwautomation/logging/__init__.py'&gt;
        utils      = &lt;module 'hwautomation.utils' from '/home/cwells/projects/hwautomation/src/hwautomation/utils/__init__.py'&gt;
src/hwautomation/hardware/__init__.py:13: in &lt;module&gt;
    from .redfish import RedfishManager
        BiosConfigManager = &lt;class 'hwautomation.hardware.bios.manager.BiosConfigManager'&gt;
        FirmwareManager = &lt;class 'hwautomation.hardware.firmware.manager.FirmwareManager'&gt;
        HardwareDiscovery = &lt;class 'hwautomation.hardware.discovery.base.HardwareDiscovery'&gt;
        HardwareDiscoveryManager = &lt;class 'hwautomation.hardware.discovery.manager.HardwareDiscoveryManager'&gt;
        IPMIInfo   = &lt;class 'hwautomation.hardware.discovery.base.IPMIInfo'&gt;
        IpmiManager = &lt;class 'hwautomation.hardware.ipmi.manager.IpmiManager'&gt;
        NetworkInterface = &lt;class 'hwautomation.hardware.discovery.base.NetworkInterface'&gt;
        SystemInfo = &lt;class 'hwautomation.hardware.discovery.base.SystemInfo'&gt;
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/__pycache__/__init__.cpython-312.pyc'
        __doc__    = 'Hardware management package.'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/__init__.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb27967f260&gt;
        __name__   = 'hwautomation.hardware'
        __package__ = 'hwautomation.hardware'
        __path__   = ['/home/cwells/projects/hwautomation/src/hwautomation/hardware']
        __spec__   = ModuleSpec(name='hwautomation.hardware', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb27967f260&gt;...ion/hardware/__init__.py', submodule_search_locations=['/home/cwells/projects/hwautomation/src/hwautomation/hardware'])
        bios       = &lt;module 'hwautomation.hardware.bios' from '/home/cwells/projects/hwautomation/src/hwautomation/hardware/bios/__init__.py'&gt;
        discovery  = &lt;module 'hwautomation.hardware.discovery' from '/home/cwells/projects/hwautomation/src/hwautomation/hardware/discovery/__init__.py'&gt;
        firmware   = &lt;module 'hwautomation.hardware.firmware' from '/home/cwells/projects/hwautomation/src/hwautomation/hardware/firmware/__init__.py'&gt;
        ipmi       = &lt;module 'hwautomation.hardware.ipmi' from '/home/cwells/projects/hwautomation/src/hwautomation/hardware/ipmi/__init__.py'&gt;
src/hwautomation/hardware/redfish/__init__.py:28: in &lt;module&gt;
    from .manager import RedfishManager
        BiosAttribute = &lt;class 'hwautomation.hardware.redfish.base.BiosAttribute'&gt;
        FirmwareComponent = &lt;class 'hwautomation.hardware.redfish.base.FirmwareComponent'&gt;
        HealthStatus = &lt;enum 'HealthStatus'&gt;
        PowerAction = &lt;enum 'PowerAction'&gt;
        PowerState = &lt;enum 'PowerState'&gt;
        RedfishCapabilities = &lt;class 'hwautomation.hardware.redfish.base.RedfishCapabilities'&gt;
        RedfishCredentials = &lt;class 'hwautomation.hardware.redfish.base.RedfishCredentials'&gt;
        RedfishDiscovery = &lt;class 'hwautomation.hardware.redfish.client.discovery.RedfishDiscovery'&gt;
        RedfishError = &lt;class 'hwautomation.hardware.redfish.base.RedfishError'&gt;
        RedfishOperation = &lt;class 'hwautomation.hardware.redfish.base.RedfishOperation'&gt;
        RedfishResponse = &lt;class 'hwautomation.hardware.redfish.base.RedfishResponse'&gt;
        RedfishSession = &lt;class 'hwautomation.hardware.redfish.client.session.RedfishSession'&gt;
        ServiceRoot = &lt;class 'hwautomation.hardware.redfish.client.discovery.ServiceRoot'&gt;
        SystemInfo = &lt;class 'hwautomation.hardware.redfish.base.SystemInfo'&gt;
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/__pycache__/__init__.cpython-312.pyc'
        __doc__    = 'Redfish hardware management module.\n\nThis package provides a modular implementation of Redfish operations\nfor serv...ion implementations (power, BIOS, firmware, system)\n- manager: Unified interface maintaining backward compatibility\n'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/__init__.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb278386630&gt;
        __name__   = 'hwautomation.hardware.redfish'
        __package__ = 'hwautomation.hardware.redfish'
        __path__   = ['/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish']
        __spec__   = ModuleSpec(name='hwautomation.hardware.redfish', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb27...fish/__init__.py', submodule_search_locations=['/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish'])
        base       = &lt;module 'hwautomation.hardware.redfish.base' from '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/base.py'&gt;
        client     = &lt;module 'hwautomation.hardware.redfish.client' from '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/client/__init__.py'&gt;
src/hwautomation/hardware/redfish/manager.py:22: in &lt;module&gt;
    from .operations import (
        Any        = typing.Any
        BiosAttribute = &lt;class 'hwautomation.hardware.redfish.base.BiosAttribute'&gt;
        Dict       = typing.Dict
        FirmwareComponent = &lt;class 'hwautomation.hardware.redfish.base.FirmwareComponent'&gt;
        List       = typing.List
        Optional   = typing.Optional
        PowerAction = &lt;enum 'PowerAction'&gt;
        PowerState = &lt;enum 'PowerState'&gt;
        RedfishCredentials = &lt;class 'hwautomation.hardware.redfish.base.RedfishCredentials'&gt;
        RedfishDiscovery = &lt;class 'hwautomation.hardware.redfish.client.discovery.RedfishDiscovery'&gt;
        RedfishError = &lt;class 'hwautomation.hardware.redfish.base.RedfishError'&gt;
        RedfishOperation = &lt;class 'hwautomation.hardware.redfish.base.RedfishOperation'&gt;
        RedfishSession = &lt;class 'hwautomation.hardware.redfish.client.session.RedfishSession'&gt;
        ServiceRoot = &lt;class 'hwautomation.hardware.redfish.client.discovery.ServiceRoot'&gt;
        SystemInfo = &lt;class 'hwautomation.hardware.redfish.base.SystemInfo'&gt;
        Union      = typing.Union
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/__pycache__/manager.cpython-312.pyc'
        __doc__    = 'Redfish management integration.\n\nThis module provides a unified interface for Redfish operations,\nconsolidating functionality from the legacy redfish_manager.py\nwhile providing a clean, modular architecture.\n'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/manager.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb27819fbf0&gt;
        __name__   = 'hwautomation.hardware.redfish.manager'
        __package__ = 'hwautomation.hardware.redfish'
        __spec__   = ModuleSpec(name='hwautomation.hardware.redfish.manager', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb27819fbf0&gt;, origin='/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/manager.py')
        get_logger = &lt;function get_logger at 0x7fb2794f5620&gt;
src/hwautomation/hardware/redfish/operations/__init__.py:7: in &lt;module&gt;
    from .bios import RedfishBiosOperation
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/__pycache__/__init__.cpython-312.pyc'
        __doc__    = 'Redfish operation modules.\n\nThis package provides specific operation implementations\nfor different Redfish functionalities.\n'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/__init__.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb27819fb60&gt;
        __name__   = 'hwautomation.hardware.redfish.operations'
        __package__ = 'hwautomation.hardware.redfish.operations'
        __path__   = ['/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations']
        __spec__   = ModuleSpec(name='hwautomation.hardware.redfish.operations', loader=&lt;_frozen_importlib_external.SourceFileLoader object...__.py', submodule_search_locations=['/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations'])
src/hwautomation/hardware/redfish/operations/bios.py:20: in &lt;module&gt;
    class RedfishBiosOperation(BaseRedfishOperation):
        Any        = typing.Any
        BaseRedfishOperation = &lt;class 'hwautomation.hardware.redfish.base.BaseRedfishOperation'&gt;
        BiosAttribute = &lt;class 'hwautomation.hardware.redfish.base.BiosAttribute'&gt;
        Dict       = typing.Dict
        List       = typing.List
        Optional   = typing.Optional
        RedfishCredentials = &lt;class 'hwautomation.hardware.redfish.base.RedfishCredentials'&gt;
        RedfishOperation = &lt;class 'hwautomation.hardware.redfish.base.RedfishOperation'&gt;
        RedfishSession = &lt;class 'hwautomation.hardware.redfish.client.session.RedfishSession'&gt;
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/__pycache__/bios.cpython-312.pyc'
        __doc__    = 'Redfish BIOS configuration operations.\n\nThis module provides BIOS settings management through the Redfish API.\n'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/bios.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd40e0&gt;
        __name__   = 'hwautomation.hardware.redfish.operations.bios'
        __package__ = 'hwautomation.hardware.redfish.operations'
        __spec__   = ModuleSpec(name='hwautomation.hardware.redfish.operations.bios', loader=&lt;_frozen_importlib_external.SourceFileLoader o...t at 0x7fb277fd40e0&gt;, origin='/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/bios.py')
        get_logger = &lt;function get_logger at 0x7fb2794f5620&gt;
        logger     = &lt;Logger hwautomation.hardware.redfish.operations.bios (DEBUG)&gt;
src/hwautomation/hardware/redfish/operations/bios.py:31: in RedfishBiosOperation
    def get_bios_attributes(self, system_id: str = "1") -&gt; RedfishOperation[Dict[str, BiosAttribute]]:
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: type 'RedfishOperation' is not subscriptable
        __doc__    = 'Redfish BIOS configuration operations.'
        __init__   = &lt;function RedfishBiosOperation.__init__ at 0x7fb2780082c0&gt;
        __module__ = 'hwautomation.hardware.redfish.operations.bios'
        __qualname__ = 'RedfishBiosOperation'</error></testcase><testcase classname="" name="tests.test_firmware_manager" time="0.000"><error message="collection failure">.venv/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule
    mod = import_path(
.venv/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path
    importlib.import_module(module_name)
/usr/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
&lt;frozen importlib._bootstrap&gt;:1387: in _gcd_import
    ???
&lt;frozen importlib._bootstrap&gt;:1360: in _find_and_load
    ???
&lt;frozen importlib._bootstrap&gt;:1331: in _find_and_load_unlocked
    ???
&lt;frozen importlib._bootstrap&gt;:935: in _load_unlocked
    ???
.venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module
    source_stat, co = _rewrite_test(fn, self.config)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test
    tree = ast.parse(source, filename=strfn)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib/python3.12/ast.py:52: in parse
    return compile(source, filename, mode, flags,
E     File "/home/cwells/projects/hwautomation/tests/test_firmware_manager.py", line 27
E       )
E       ^
E   SyntaxError: unmatched ')'</error></testcase><testcase classname="" name="tests.test_firmware_web_interface" time="0.000"><error message="collection failure">tests/test_firmware_web_interface.py:26: in &lt;module&gt;
    from hwautomation.orchestration.workflow_manager import WorkflowManager
        DbHelper   = &lt;class 'hwautomation.database.helper.DbHelper'&gt;
        FirmwareManager = &lt;class 'hwautomation.hardware.firmware.manager.FirmwareManager'&gt;
        MagicMock  = &lt;class 'unittest.mock.MagicMock'&gt;
        Mock       = &lt;class 'unittest.mock.Mock'&gt;
        Path       = &lt;class 'pathlib.Path'&gt;
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/tests/__pycache__/test_firmware_web_interface.cpython-312.pyc'
        __doc__    = '\nUnit tests for firmware web interface components.\n'
        __file__   = '/home/cwells/projects/hwautomation/tests/test_firmware_web_interface.py'
        __loader__ = &lt;_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7fb27a52ab70&gt;
        __name__   = 'test_firmware_web_interface'
        __package__ = ''
        __spec__   = ModuleSpec(name='test_firmware_web_interface', loader=&lt;_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7fb27a52ab70&gt;, origin='/home/cwells/projects/hwautomation/tests/test_firmware_web_interface.py')
        datetime   = &lt;class 'datetime.datetime'&gt;
        json       = &lt;module 'json' from '/usr/lib/python3.12/json/__init__.py'&gt;
        patch      = &lt;function patch at 0x7fb279766340&gt;
        pytest     = &lt;module 'pytest' from '/home/cwells/projects/hwautomation/.venv/lib/python3.12/site-packages/pytest/__init__.py'&gt;
        pytestmark = [MarkDecorator(mark=Mark(name='web', args=(), kwargs={})), MarkDecorator(mark=Mark(name='integration', args=(), kwargs={}))]
        shutil     = &lt;module 'shutil' from '/usr/lib/python3.12/shutil.py'&gt;
        sys        = &lt;module 'sys' (built-in)&gt;
        tempfile   = &lt;module 'tempfile' from '/usr/lib/python3.12/tempfile.py'&gt;
        timedelta  = &lt;class 'datetime.timedelta'&gt;
src/hwautomation/__init__.py:16: in &lt;module&gt;
    from .hardware.redfish import RedfishManager
        BiosConfigManager = &lt;class 'hwautomation.hardware.bios.manager.BiosConfigManager'&gt;
        DatabaseMigrator = &lt;class 'hwautomation.database.migrations.DatabaseMigrator'&gt;
        DbHelper   = &lt;class 'hwautomation.database.helper.DbHelper'&gt;
        IpmiManager = &lt;class 'hwautomation.hardware.ipmi.manager.IpmiManager'&gt;
        __author__ = 'Hardware Automation Team'
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/__pycache__/__init__.cpython-312.pyc'
        __doc__    = '\nHardware Automation Package\n\nA Python package for automating server hardware management through MAAS API,\nIPMI, and RedFish interfaces.\n.'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/__init__.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd7ec0&gt;
        __name__   = 'hwautomation'
        __package__ = 'hwautomation'
        __path__   = ['/home/cwells/projects/hwautomation/src/hwautomation']
        __spec__   = ModuleSpec(name='hwautomation', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd7ec0&gt;, origin=...tion/src/hwautomation/__init__.py', submodule_search_locations=['/home/cwells/projects/hwautomation/src/hwautomation'])
        __version__ = '1.0.0'
src/hwautomation/hardware/__init__.py:13: in &lt;module&gt;
    from .redfish import RedfishManager
        BiosConfigManager = &lt;class 'hwautomation.hardware.bios.manager.BiosConfigManager'&gt;
        FirmwareManager = &lt;class 'hwautomation.hardware.firmware.manager.FirmwareManager'&gt;
        HardwareDiscovery = &lt;class 'hwautomation.hardware.discovery.base.HardwareDiscovery'&gt;
        HardwareDiscoveryManager = &lt;class 'hwautomation.hardware.discovery.manager.HardwareDiscoveryManager'&gt;
        IPMIInfo   = &lt;class 'hwautomation.hardware.discovery.base.IPMIInfo'&gt;
        IpmiManager = &lt;class 'hwautomation.hardware.ipmi.manager.IpmiManager'&gt;
        NetworkInterface = &lt;class 'hwautomation.hardware.discovery.base.NetworkInterface'&gt;
        SystemInfo = &lt;class 'hwautomation.hardware.discovery.base.SystemInfo'&gt;
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/__pycache__/__init__.cpython-312.pyc'
        __doc__    = 'Hardware management package.'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/__init__.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd7ef0&gt;
        __name__   = 'hwautomation.hardware'
        __package__ = 'hwautomation.hardware'
        __path__   = ['/home/cwells/projects/hwautomation/src/hwautomation/hardware']
        __spec__   = ModuleSpec(name='hwautomation.hardware', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd7ef0&gt;...ion/hardware/__init__.py', submodule_search_locations=['/home/cwells/projects/hwautomation/src/hwautomation/hardware'])
src/hwautomation/hardware/redfish/__init__.py:28: in &lt;module&gt;
    from .manager import RedfishManager
        BiosAttribute = &lt;class 'hwautomation.hardware.redfish.base.BiosAttribute'&gt;
        FirmwareComponent = &lt;class 'hwautomation.hardware.redfish.base.FirmwareComponent'&gt;
        HealthStatus = &lt;enum 'HealthStatus'&gt;
        PowerAction = &lt;enum 'PowerAction'&gt;
        PowerState = &lt;enum 'PowerState'&gt;
        RedfishCapabilities = &lt;class 'hwautomation.hardware.redfish.base.RedfishCapabilities'&gt;
        RedfishCredentials = &lt;class 'hwautomation.hardware.redfish.base.RedfishCredentials'&gt;
        RedfishDiscovery = &lt;class 'hwautomation.hardware.redfish.client.discovery.RedfishDiscovery'&gt;
        RedfishError = &lt;class 'hwautomation.hardware.redfish.base.RedfishError'&gt;
        RedfishOperation = &lt;class 'hwautomation.hardware.redfish.base.RedfishOperation'&gt;
        RedfishResponse = &lt;class 'hwautomation.hardware.redfish.base.RedfishResponse'&gt;
        RedfishSession = &lt;class 'hwautomation.hardware.redfish.client.session.RedfishSession'&gt;
        ServiceRoot = &lt;class 'hwautomation.hardware.redfish.client.discovery.ServiceRoot'&gt;
        SystemInfo = &lt;class 'hwautomation.hardware.redfish.base.SystemInfo'&gt;
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/__pycache__/__init__.cpython-312.pyc'
        __doc__    = 'Redfish hardware management module.\n\nThis package provides a modular implementation of Redfish operations\nfor serv...ion implementations (power, BIOS, firmware, system)\n- manager: Unified interface maintaining backward compatibility\n'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/__init__.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd76b0&gt;
        __name__   = 'hwautomation.hardware.redfish'
        __package__ = 'hwautomation.hardware.redfish'
        __path__   = ['/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish']
        __spec__   = ModuleSpec(name='hwautomation.hardware.redfish', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb27...fish/__init__.py', submodule_search_locations=['/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish'])
src/hwautomation/hardware/redfish/manager.py:22: in &lt;module&gt;
    from .operations import (
        Any        = typing.Any
        BiosAttribute = &lt;class 'hwautomation.hardware.redfish.base.BiosAttribute'&gt;
        Dict       = typing.Dict
        FirmwareComponent = &lt;class 'hwautomation.hardware.redfish.base.FirmwareComponent'&gt;
        List       = typing.List
        Optional   = typing.Optional
        PowerAction = &lt;enum 'PowerAction'&gt;
        PowerState = &lt;enum 'PowerState'&gt;
        RedfishCredentials = &lt;class 'hwautomation.hardware.redfish.base.RedfishCredentials'&gt;
        RedfishDiscovery = &lt;class 'hwautomation.hardware.redfish.client.discovery.RedfishDiscovery'&gt;
        RedfishError = &lt;class 'hwautomation.hardware.redfish.base.RedfishError'&gt;
        RedfishOperation = &lt;class 'hwautomation.hardware.redfish.base.RedfishOperation'&gt;
        RedfishSession = &lt;class 'hwautomation.hardware.redfish.client.session.RedfishSession'&gt;
        ServiceRoot = &lt;class 'hwautomation.hardware.redfish.client.discovery.ServiceRoot'&gt;
        SystemInfo = &lt;class 'hwautomation.hardware.redfish.base.SystemInfo'&gt;
        Union      = typing.Union
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/__pycache__/manager.cpython-312.pyc'
        __doc__    = 'Redfish management integration.\n\nThis module provides a unified interface for Redfish operations,\nconsolidating functionality from the legacy redfish_manager.py\nwhile providing a clean, modular architecture.\n'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/manager.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd7860&gt;
        __name__   = 'hwautomation.hardware.redfish.manager'
        __package__ = 'hwautomation.hardware.redfish'
        __spec__   = ModuleSpec(name='hwautomation.hardware.redfish.manager', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd7860&gt;, origin='/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/manager.py')
        get_logger = &lt;function get_logger at 0x7fb2794f5620&gt;
src/hwautomation/hardware/redfish/operations/__init__.py:7: in &lt;module&gt;
    from .bios import RedfishBiosOperation
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/__pycache__/__init__.cpython-312.pyc'
        __doc__    = 'Redfish operation modules.\n\nThis package provides specific operation implementations\nfor different Redfish functionalities.\n'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/__init__.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd78f0&gt;
        __name__   = 'hwautomation.hardware.redfish.operations'
        __package__ = 'hwautomation.hardware.redfish.operations'
        __path__   = ['/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations']
        __spec__   = ModuleSpec(name='hwautomation.hardware.redfish.operations', loader=&lt;_frozen_importlib_external.SourceFileLoader object...__.py', submodule_search_locations=['/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations'])
src/hwautomation/hardware/redfish/operations/bios.py:20: in &lt;module&gt;
    class RedfishBiosOperation(BaseRedfishOperation):
        Any        = typing.Any
        BaseRedfishOperation = &lt;class 'hwautomation.hardware.redfish.base.BaseRedfishOperation'&gt;
        BiosAttribute = &lt;class 'hwautomation.hardware.redfish.base.BiosAttribute'&gt;
        Dict       = typing.Dict
        List       = typing.List
        Optional   = typing.Optional
        RedfishCredentials = &lt;class 'hwautomation.hardware.redfish.base.RedfishCredentials'&gt;
        RedfishOperation = &lt;class 'hwautomation.hardware.redfish.base.RedfishOperation'&gt;
        RedfishSession = &lt;class 'hwautomation.hardware.redfish.client.session.RedfishSession'&gt;
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/__pycache__/bios.cpython-312.pyc'
        __doc__    = 'Redfish BIOS configuration operations.\n\nThis module provides BIOS settings management through the Redfish API.\n'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/bios.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd7aa0&gt;
        __name__   = 'hwautomation.hardware.redfish.operations.bios'
        __package__ = 'hwautomation.hardware.redfish.operations'
        __spec__   = ModuleSpec(name='hwautomation.hardware.redfish.operations.bios', loader=&lt;_frozen_importlib_external.SourceFileLoader o...t at 0x7fb277fd7aa0&gt;, origin='/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/bios.py')
        get_logger = &lt;function get_logger at 0x7fb2794f5620&gt;
        logger     = &lt;Logger hwautomation.hardware.redfish.operations.bios (DEBUG)&gt;
src/hwautomation/hardware/redfish/operations/bios.py:31: in RedfishBiosOperation
    def get_bios_attributes(self, system_id: str = "1") -&gt; RedfishOperation[Dict[str, BiosAttribute]]:
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: type 'RedfishOperation' is not subscriptable
        __doc__    = 'Redfish BIOS configuration operations.'
        __init__   = &lt;function RedfishBiosOperation.__init__ at 0x7fb278084c20&gt;
        __module__ = 'hwautomation.hardware.redfish.operations.bios'
        __qualname__ = 'RedfishBiosOperation'</error></testcase><testcase classname="" name="tests.test_phase2_decision_logic" time="0.000"><error message="collection failure">tests/test_phase2_decision_logic.py:15: in &lt;module&gt;
    from hwautomation.hardware.bios_config import BiosConfigManager
        Path       = &lt;class 'pathlib.Path'&gt;
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/tests/__pycache__/test_phase2_decision_logic.cpython-312.pyc'
        __doc__    = '\nTest Phase 2 Enhanced BIOS Configuration Decision Logic\n\nThis test demonstrates the new per-setting method selection capabilities\nthat intelligently choose between Redfish and vendor tools for each BIOS setting.\n'
        __file__   = '/home/cwells/projects/hwautomation/tests/test_phase2_decision_logic.py'
        __loader__ = &lt;_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7fb27a52ab70&gt;
        __name__   = 'test_phase2_decision_logic'
        __package__ = ''
        __spec__   = ModuleSpec(name='test_phase2_decision_logic', loader=&lt;_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7fb27a52ab70&gt;, origin='/home/cwells/projects/hwautomation/tests/test_phase2_decision_logic.py')
        logging    = &lt;module 'logging' from '/usr/lib/python3.12/logging/__init__.py'&gt;
        sys        = &lt;module 'sys' (built-in)&gt;
src/hwautomation/__init__.py:16: in &lt;module&gt;
    from .hardware.redfish import RedfishManager
        BiosConfigManager = &lt;class 'hwautomation.hardware.bios.manager.BiosConfigManager'&gt;
        DatabaseMigrator = &lt;class 'hwautomation.database.migrations.DatabaseMigrator'&gt;
        DbHelper   = &lt;class 'hwautomation.database.helper.DbHelper'&gt;
        IpmiManager = &lt;class 'hwautomation.hardware.ipmi.manager.IpmiManager'&gt;
        __author__ = 'Hardware Automation Team'
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/__pycache__/__init__.cpython-312.pyc'
        __doc__    = '\nHardware Automation Package\n\nA Python package for automating server hardware management through MAAS API,\nIPMI, and RedFish interfaces.\n.'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/__init__.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd6630&gt;
        __name__   = 'hwautomation'
        __package__ = 'hwautomation'
        __path__   = ['/home/cwells/projects/hwautomation/src/hwautomation']
        __spec__   = ModuleSpec(name='hwautomation', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd6630&gt;, origin=...tion/src/hwautomation/__init__.py', submodule_search_locations=['/home/cwells/projects/hwautomation/src/hwautomation'])
        __version__ = '1.0.0'
src/hwautomation/hardware/__init__.py:13: in &lt;module&gt;
    from .redfish import RedfishManager
        BiosConfigManager = &lt;class 'hwautomation.hardware.bios.manager.BiosConfigManager'&gt;
        FirmwareManager = &lt;class 'hwautomation.hardware.firmware.manager.FirmwareManager'&gt;
        HardwareDiscovery = &lt;class 'hwautomation.hardware.discovery.base.HardwareDiscovery'&gt;
        HardwareDiscoveryManager = &lt;class 'hwautomation.hardware.discovery.manager.HardwareDiscoveryManager'&gt;
        IPMIInfo   = &lt;class 'hwautomation.hardware.discovery.base.IPMIInfo'&gt;
        IpmiManager = &lt;class 'hwautomation.hardware.ipmi.manager.IpmiManager'&gt;
        NetworkInterface = &lt;class 'hwautomation.hardware.discovery.base.NetworkInterface'&gt;
        SystemInfo = &lt;class 'hwautomation.hardware.discovery.base.SystemInfo'&gt;
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/__pycache__/__init__.cpython-312.pyc'
        __doc__    = 'Hardware management package.'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/__init__.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd6870&gt;
        __name__   = 'hwautomation.hardware'
        __package__ = 'hwautomation.hardware'
        __path__   = ['/home/cwells/projects/hwautomation/src/hwautomation/hardware']
        __spec__   = ModuleSpec(name='hwautomation.hardware', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd6870&gt;...ion/hardware/__init__.py', submodule_search_locations=['/home/cwells/projects/hwautomation/src/hwautomation/hardware'])
src/hwautomation/hardware/redfish/__init__.py:28: in &lt;module&gt;
    from .manager import RedfishManager
        BiosAttribute = &lt;class 'hwautomation.hardware.redfish.base.BiosAttribute'&gt;
        FirmwareComponent = &lt;class 'hwautomation.hardware.redfish.base.FirmwareComponent'&gt;
        HealthStatus = &lt;enum 'HealthStatus'&gt;
        PowerAction = &lt;enum 'PowerAction'&gt;
        PowerState = &lt;enum 'PowerState'&gt;
        RedfishCapabilities = &lt;class 'hwautomation.hardware.redfish.base.RedfishCapabilities'&gt;
        RedfishCredentials = &lt;class 'hwautomation.hardware.redfish.base.RedfishCredentials'&gt;
        RedfishDiscovery = &lt;class 'hwautomation.hardware.redfish.client.discovery.RedfishDiscovery'&gt;
        RedfishError = &lt;class 'hwautomation.hardware.redfish.base.RedfishError'&gt;
        RedfishOperation = &lt;class 'hwautomation.hardware.redfish.base.RedfishOperation'&gt;
        RedfishResponse = &lt;class 'hwautomation.hardware.redfish.base.RedfishResponse'&gt;
        RedfishSession = &lt;class 'hwautomation.hardware.redfish.client.session.RedfishSession'&gt;
        ServiceRoot = &lt;class 'hwautomation.hardware.redfish.client.discovery.ServiceRoot'&gt;
        SystemInfo = &lt;class 'hwautomation.hardware.redfish.base.SystemInfo'&gt;
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/__pycache__/__init__.cpython-312.pyc'
        __doc__    = 'Redfish hardware management module.\n\nThis package provides a modular implementation of Redfish operations\nfor serv...ion implementations (power, BIOS, firmware, system)\n- manager: Unified interface maintaining backward compatibility\n'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/__init__.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd6960&gt;
        __name__   = 'hwautomation.hardware.redfish'
        __package__ = 'hwautomation.hardware.redfish'
        __path__   = ['/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish']
        __spec__   = ModuleSpec(name='hwautomation.hardware.redfish', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb27...fish/__init__.py', submodule_search_locations=['/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish'])
src/hwautomation/hardware/redfish/manager.py:22: in &lt;module&gt;
    from .operations import (
        Any        = typing.Any
        BiosAttribute = &lt;class 'hwautomation.hardware.redfish.base.BiosAttribute'&gt;
        Dict       = typing.Dict
        FirmwareComponent = &lt;class 'hwautomation.hardware.redfish.base.FirmwareComponent'&gt;
        List       = typing.List
        Optional   = typing.Optional
        PowerAction = &lt;enum 'PowerAction'&gt;
        PowerState = &lt;enum 'PowerState'&gt;
        RedfishCredentials = &lt;class 'hwautomation.hardware.redfish.base.RedfishCredentials'&gt;
        RedfishDiscovery = &lt;class 'hwautomation.hardware.redfish.client.discovery.RedfishDiscovery'&gt;
        RedfishError = &lt;class 'hwautomation.hardware.redfish.base.RedfishError'&gt;
        RedfishOperation = &lt;class 'hwautomation.hardware.redfish.base.RedfishOperation'&gt;
        RedfishSession = &lt;class 'hwautomation.hardware.redfish.client.session.RedfishSession'&gt;
        ServiceRoot = &lt;class 'hwautomation.hardware.redfish.client.discovery.ServiceRoot'&gt;
        SystemInfo = &lt;class 'hwautomation.hardware.redfish.base.SystemInfo'&gt;
        Union      = typing.Union
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/__pycache__/manager.cpython-312.pyc'
        __doc__    = 'Redfish management integration.\n\nThis module provides a unified interface for Redfish operations,\nconsolidating functionality from the legacy redfish_manager.py\nwhile providing a clean, modular architecture.\n'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/manager.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd6450&gt;
        __name__   = 'hwautomation.hardware.redfish.manager'
        __package__ = 'hwautomation.hardware.redfish'
        __spec__   = ModuleSpec(name='hwautomation.hardware.redfish.manager', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd6450&gt;, origin='/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/manager.py')
        get_logger = &lt;function get_logger at 0x7fb2794f5620&gt;
src/hwautomation/hardware/redfish/operations/__init__.py:7: in &lt;module&gt;
    from .bios import RedfishBiosOperation
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/__pycache__/__init__.cpython-312.pyc'
        __doc__    = 'Redfish operation modules.\n\nThis package provides specific operation implementations\nfor different Redfish functionalities.\n'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/__init__.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd5040&gt;
        __name__   = 'hwautomation.hardware.redfish.operations'
        __package__ = 'hwautomation.hardware.redfish.operations'
        __path__   = ['/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations']
        __spec__   = ModuleSpec(name='hwautomation.hardware.redfish.operations', loader=&lt;_frozen_importlib_external.SourceFileLoader object...__.py', submodule_search_locations=['/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations'])
src/hwautomation/hardware/redfish/operations/bios.py:20: in &lt;module&gt;
    class RedfishBiosOperation(BaseRedfishOperation):
        Any        = typing.Any
        BaseRedfishOperation = &lt;class 'hwautomation.hardware.redfish.base.BaseRedfishOperation'&gt;
        BiosAttribute = &lt;class 'hwautomation.hardware.redfish.base.BiosAttribute'&gt;
        Dict       = typing.Dict
        List       = typing.List
        Optional   = typing.Optional
        RedfishCredentials = &lt;class 'hwautomation.hardware.redfish.base.RedfishCredentials'&gt;
        RedfishOperation = &lt;class 'hwautomation.hardware.redfish.base.RedfishOperation'&gt;
        RedfishSession = &lt;class 'hwautomation.hardware.redfish.client.session.RedfishSession'&gt;
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/__pycache__/bios.cpython-312.pyc'
        __doc__    = 'Redfish BIOS configuration operations.\n\nThis module provides BIOS settings management through the Redfish API.\n'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/bios.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd6360&gt;
        __name__   = 'hwautomation.hardware.redfish.operations.bios'
        __package__ = 'hwautomation.hardware.redfish.operations'
        __spec__   = ModuleSpec(name='hwautomation.hardware.redfish.operations.bios', loader=&lt;_frozen_importlib_external.SourceFileLoader o...t at 0x7fb277fd6360&gt;, origin='/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/bios.py')
        get_logger = &lt;function get_logger at 0x7fb2794f5620&gt;
        logger     = &lt;Logger hwautomation.hardware.redfish.operations.bios (DEBUG)&gt;
src/hwautomation/hardware/redfish/operations/bios.py:31: in RedfishBiosOperation
    def get_bios_attributes(self, system_id: str = "1") -&gt; RedfishOperation[Dict[str, BiosAttribute]]:
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: type 'RedfishOperation' is not subscriptable
        __doc__    = 'Redfish BIOS configuration operations.'
        __init__   = &lt;function RedfishBiosOperation.__init__ at 0x7fb2780867a0&gt;
        __module__ = 'hwautomation.hardware.redfish.operations.bios'
        __qualname__ = 'RedfishBiosOperation'</error></testcase><testcase classname="" name="tests.test_phase2_focused" time="0.000"><error message="collection failure">tests/test_phase2_focused.py:24: in &lt;module&gt;
    from hwautomation.hardware.bios_decision_logic import (
        Path       = &lt;class 'pathlib.Path'&gt;
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/tests/__pycache__/test_phase2_focused.cpython-312.pyc'
        __doc__    = '\nFocused Phase 2 Decision Logic Test\n\nThis test demonstrates the enhanced per-setting method selection without\nrequiring full hwautomation module imports.\n'
        __file__   = '/home/cwells/projects/hwautomation/tests/test_phase2_focused.py'
        __loader__ = &lt;_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7fb27a52ab70&gt;
        __name__   = 'test_phase2_focused'
        __package__ = ''
        __spec__   = ModuleSpec(name='test_phase2_focused', loader=&lt;_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7fb27a52ab70&gt;, origin='/home/cwells/projects/hwautomation/tests/test_phase2_focused.py')
        logger     = &lt;Logger test_phase2_focused (INFO)&gt;
        logging    = &lt;module 'logging' from '/usr/lib/python3.12/logging/__init__.py'&gt;
        sys        = &lt;module 'sys' (built-in)&gt;
        yaml       = &lt;module 'yaml' from '/home/cwells/projects/hwautomation/.venv/lib/python3.12/site-packages/yaml/__init__.py'&gt;
src/hwautomation/__init__.py:16: in &lt;module&gt;
    from .hardware.redfish import RedfishManager
        BiosConfigManager = &lt;class 'hwautomation.hardware.bios.manager.BiosConfigManager'&gt;
        DatabaseMigrator = &lt;class 'hwautomation.database.migrations.DatabaseMigrator'&gt;
        DbHelper   = &lt;class 'hwautomation.database.helper.DbHelper'&gt;
        IpmiManager = &lt;class 'hwautomation.hardware.ipmi.manager.IpmiManager'&gt;
        __author__ = 'Hardware Automation Team'
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/__pycache__/__init__.cpython-312.pyc'
        __doc__    = '\nHardware Automation Package\n\nA Python package for automating server hardware management through MAAS API,\nIPMI, and RedFish interfaces.\n.'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/__init__.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb27819f800&gt;
        __name__   = 'hwautomation'
        __package__ = 'hwautomation'
        __path__   = ['/home/cwells/projects/hwautomation/src/hwautomation']
        __spec__   = ModuleSpec(name='hwautomation', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb27819f800&gt;, origin=...tion/src/hwautomation/__init__.py', submodule_search_locations=['/home/cwells/projects/hwautomation/src/hwautomation'])
        __version__ = '1.0.0'
src/hwautomation/hardware/__init__.py:13: in &lt;module&gt;
    from .redfish import RedfishManager
        BiosConfigManager = &lt;class 'hwautomation.hardware.bios.manager.BiosConfigManager'&gt;
        FirmwareManager = &lt;class 'hwautomation.hardware.firmware.manager.FirmwareManager'&gt;
        HardwareDiscovery = &lt;class 'hwautomation.hardware.discovery.base.HardwareDiscovery'&gt;
        HardwareDiscoveryManager = &lt;class 'hwautomation.hardware.discovery.manager.HardwareDiscoveryManager'&gt;
        IPMIInfo   = &lt;class 'hwautomation.hardware.discovery.base.IPMIInfo'&gt;
        IpmiManager = &lt;class 'hwautomation.hardware.ipmi.manager.IpmiManager'&gt;
        NetworkInterface = &lt;class 'hwautomation.hardware.discovery.base.NetworkInterface'&gt;
        SystemInfo = &lt;class 'hwautomation.hardware.discovery.base.SystemInfo'&gt;
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/__pycache__/__init__.cpython-312.pyc'
        __doc__    = 'Hardware management package.'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/__init__.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd65d0&gt;
        __name__   = 'hwautomation.hardware'
        __package__ = 'hwautomation.hardware'
        __path__   = ['/home/cwells/projects/hwautomation/src/hwautomation/hardware']
        __spec__   = ModuleSpec(name='hwautomation.hardware', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd65d0&gt;...ion/hardware/__init__.py', submodule_search_locations=['/home/cwells/projects/hwautomation/src/hwautomation/hardware'])
src/hwautomation/hardware/redfish/__init__.py:28: in &lt;module&gt;
    from .manager import RedfishManager
        BiosAttribute = &lt;class 'hwautomation.hardware.redfish.base.BiosAttribute'&gt;
        FirmwareComponent = &lt;class 'hwautomation.hardware.redfish.base.FirmwareComponent'&gt;
        HealthStatus = &lt;enum 'HealthStatus'&gt;
        PowerAction = &lt;enum 'PowerAction'&gt;
        PowerState = &lt;enum 'PowerState'&gt;
        RedfishCapabilities = &lt;class 'hwautomation.hardware.redfish.base.RedfishCapabilities'&gt;
        RedfishCredentials = &lt;class 'hwautomation.hardware.redfish.base.RedfishCredentials'&gt;
        RedfishDiscovery = &lt;class 'hwautomation.hardware.redfish.client.discovery.RedfishDiscovery'&gt;
        RedfishError = &lt;class 'hwautomation.hardware.redfish.base.RedfishError'&gt;
        RedfishOperation = &lt;class 'hwautomation.hardware.redfish.base.RedfishOperation'&gt;
        RedfishResponse = &lt;class 'hwautomation.hardware.redfish.base.RedfishResponse'&gt;
        RedfishSession = &lt;class 'hwautomation.hardware.redfish.client.session.RedfishSession'&gt;
        ServiceRoot = &lt;class 'hwautomation.hardware.redfish.client.discovery.ServiceRoot'&gt;
        SystemInfo = &lt;class 'hwautomation.hardware.redfish.base.SystemInfo'&gt;
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/__pycache__/__init__.cpython-312.pyc'
        __doc__    = 'Redfish hardware management module.\n\nThis package provides a modular implementation of Redfish operations\nfor serv...ion implementations (power, BIOS, firmware, system)\n- manager: Unified interface maintaining backward compatibility\n'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/__init__.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd6420&gt;
        __name__   = 'hwautomation.hardware.redfish'
        __package__ = 'hwautomation.hardware.redfish'
        __path__   = ['/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish']
        __spec__   = ModuleSpec(name='hwautomation.hardware.redfish', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb27...fish/__init__.py', submodule_search_locations=['/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish'])
src/hwautomation/hardware/redfish/manager.py:22: in &lt;module&gt;
    from .operations import (
        Any        = typing.Any
        BiosAttribute = &lt;class 'hwautomation.hardware.redfish.base.BiosAttribute'&gt;
        Dict       = typing.Dict
        FirmwareComponent = &lt;class 'hwautomation.hardware.redfish.base.FirmwareComponent'&gt;
        List       = typing.List
        Optional   = typing.Optional
        PowerAction = &lt;enum 'PowerAction'&gt;
        PowerState = &lt;enum 'PowerState'&gt;
        RedfishCredentials = &lt;class 'hwautomation.hardware.redfish.base.RedfishCredentials'&gt;
        RedfishDiscovery = &lt;class 'hwautomation.hardware.redfish.client.discovery.RedfishDiscovery'&gt;
        RedfishError = &lt;class 'hwautomation.hardware.redfish.base.RedfishError'&gt;
        RedfishOperation = &lt;class 'hwautomation.hardware.redfish.base.RedfishOperation'&gt;
        RedfishSession = &lt;class 'hwautomation.hardware.redfish.client.session.RedfishSession'&gt;
        ServiceRoot = &lt;class 'hwautomation.hardware.redfish.client.discovery.ServiceRoot'&gt;
        SystemInfo = &lt;class 'hwautomation.hardware.redfish.base.SystemInfo'&gt;
        Union      = typing.Union
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/__pycache__/manager.cpython-312.pyc'
        __doc__    = 'Redfish management integration.\n\nThis module provides a unified interface for Redfish operations,\nconsolidating functionality from the legacy redfish_manager.py\nwhile providing a clean, modular architecture.\n'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/manager.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd6660&gt;
        __name__   = 'hwautomation.hardware.redfish.manager'
        __package__ = 'hwautomation.hardware.redfish'
        __spec__   = ModuleSpec(name='hwautomation.hardware.redfish.manager', loader=&lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd6660&gt;, origin='/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/manager.py')
        get_logger = &lt;function get_logger at 0x7fb2794f5620&gt;
src/hwautomation/hardware/redfish/operations/__init__.py:7: in &lt;module&gt;
    from .bios import RedfishBiosOperation
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/__pycache__/__init__.cpython-312.pyc'
        __doc__    = 'Redfish operation modules.\n\nThis package provides specific operation implementations\nfor different Redfish functionalities.\n'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/__init__.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd68a0&gt;
        __name__   = 'hwautomation.hardware.redfish.operations'
        __package__ = 'hwautomation.hardware.redfish.operations'
        __path__   = ['/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations']
        __spec__   = ModuleSpec(name='hwautomation.hardware.redfish.operations', loader=&lt;_frozen_importlib_external.SourceFileLoader object...__.py', submodule_search_locations=['/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations'])
src/hwautomation/hardware/redfish/operations/bios.py:20: in &lt;module&gt;
    class RedfishBiosOperation(BaseRedfishOperation):
        Any        = typing.Any
        BaseRedfishOperation = &lt;class 'hwautomation.hardware.redfish.base.BaseRedfishOperation'&gt;
        BiosAttribute = &lt;class 'hwautomation.hardware.redfish.base.BiosAttribute'&gt;
        Dict       = typing.Dict
        List       = typing.List
        Optional   = typing.Optional
        RedfishCredentials = &lt;class 'hwautomation.hardware.redfish.base.RedfishCredentials'&gt;
        RedfishOperation = &lt;class 'hwautomation.hardware.redfish.base.RedfishOperation'&gt;
        RedfishSession = &lt;class 'hwautomation.hardware.redfish.client.session.RedfishSession'&gt;
        __builtins__ = &lt;builtins&gt;
        __cached__ = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/__pycache__/bios.cpython-312.pyc'
        __doc__    = 'Redfish BIOS configuration operations.\n\nThis module provides BIOS settings management through the Redfish API.\n'
        __file__   = '/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/bios.py'
        __loader__ = &lt;_frozen_importlib_external.SourceFileLoader object at 0x7fb277fd5040&gt;
        __name__   = 'hwautomation.hardware.redfish.operations.bios'
        __package__ = 'hwautomation.hardware.redfish.operations'
        __spec__   = ModuleSpec(name='hwautomation.hardware.redfish.operations.bios', loader=&lt;_frozen_importlib_external.SourceFileLoader o...t at 0x7fb277fd5040&gt;, origin='/home/cwells/projects/hwautomation/src/hwautomation/hardware/redfish/operations/bios.py')
        get_logger = &lt;function get_logger at 0x7fb2794f5620&gt;
        logger     = &lt;Logger hwautomation.hardware.redfish.operations.bios (DEBUG)&gt;
src/hwautomation/hardware/redfish/operations/bios.py:31: in RedfishBiosOperation
    def get_bios_attributes(self, system_id: str = "1") -&gt; RedfishOperation[Dict[str, BiosAttribute]]:
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: type 'RedfishOperation' is not subscriptable
        __doc__    = 'Redfish BIOS configuration operations.'
        __init__   = &lt;function RedfishBiosOperation.__init__ at 0x7fb278085800&gt;
        __module__ = 'hwautomation.hardware.redfish.operations.bios'
        __qualname__ = 'RedfishBiosOperation'</error></testcase></testsuite></testsuites>